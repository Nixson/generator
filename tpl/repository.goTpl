package repository

import (
	"github.com/Nixson/db"
	"github.com/Nixson/logger"
	"gorm.io/gorm"
	domain "${path}"
)

var ${table}TableName = "${table}"
var ${table}TableDB *gorm.DB
func ${name}() *gorm.DB {
    if ${table}TableDB == nil {
    	${table}TableDB = db.Get().Table(${table}TableName)
    }
    return ${table}TableDB
}

func ${name}Create(${subname} *domain.${name}) *gorm.DB {
	return ${name}().Create(${subname})
}
func ${name}GetAll() ([]domain.${name}, *gorm.DB) {
	var ${subname} []domain.${name}
	result := ${name}().Find(&${subname})
	return ${subname}, result
}
func ${name}Update(${subname} *domain.${name}) *gorm.DB {
	return ${name}().Save(${subname})
}
func ${name}Delete(${subname} *domain.${name}) *gorm.DB {
	return ${name}().Delete(${subname})
}
func ${name}GetAllByParams(param domain.${name}) []domain.${name} {
	var ${subname} []domain.${name}
	${name}().Find(&${subname},param)
	return ${subname}
}
func ${name}GetByParams(param domain.${name}) domain.${name} {
	var ${subname} domain.${name}
	${name}().First(&${subname},param)
	return ${subname}
}
func ${name}Migrate() {
	err := db.Get().AutoMigrate(domain.${name}{})
	if err != nil {
		logger.Println(err.Error())
	}
}
